name: PR Approver

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  approve_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR details
        id: pr_details
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prAuthor = context.payload.pull_request.user.login;
            const prNumber = context.payload.pull_request.number;

            console.log(`Owner: ${owner}`);
            console.log(`PR Author: ${prAuthor}`);
            console.log(`PR Number: ${prNumber}`);

            // Returning the author and the PR number to use later
            return {
              pr_author: prAuthor,
              pr_number: prNumber,
              repo_owner: owner
            };

      - name: Check if author is repository owner
        id: check_author
        run: |
          echo "PR Author: ${{ steps.pr_details.outputs.pr_author }}"
          echo "Repository Owner: ${{ steps.pr_details.outputs.repo_owner }}"

          if [ "${{ steps.pr_details.outputs.pr_author }}" != "${{ steps.pr_details.outputs.repo_owner }}" ]; then
            echo "The PR author is not the repository owner."
            exit 1
          else
            echo "The PR author is the repository owner."
          fi

      - name: Approve PR
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = '${{ steps.pr_details.outputs.pr_number }}';

            try {
              const github = github.getOctokit(process.env.GITHUB_TOKEN);
              await github.rest.pulls.createReview({
              owner: owner,
              repo: repo,
              pull_number: parseInt(prNumber.replace(/"/g, '')),
              event: 'APPROVE'
            });
            } catch (error) {
              console.error('Error approving PR:', error);
              throw error;
            }

